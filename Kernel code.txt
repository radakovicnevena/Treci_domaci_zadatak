/**
 * Document: MaxCompiler Tutorial (maxcompiler-tutorial.pdf)
 * Chapter: 6
 * Example: 3
 * Summary:
 *        Kernel that doubles values in a vector.
 */
package vectors;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;

class VectorsKernel extends Kernel {

	VectorsKernel(KernelParameters parameters, int vectorSize) {
		super(parameters);

		DFEVectorType<DFEVar> vectorType =
			new DFEVectorType<DFEVar>(dfeUInt(32), vectorSize);

		// Input
		DFEVector<DFEVar> PrviVektor = io.input("PrviVektor", vectorType);
		DFEVector<DFEVar> DrugiVektor = io.input("DrugiVektor", vectorType);

		//izlazni vektor
		DFEVector<DFEVar> IzlazniVektor = vectorType.newInstance(this);

		for (int i = 0; i < vectorSize; i++)
		//kreiranje izlaznog vektora
			IzlazniVektor[i].connect(PrviVektor[i] + DrugiVektor[i]); 


		//Output
		io.output("IzlazniVektor", IzlazniVektor, vectorType);
	}

}